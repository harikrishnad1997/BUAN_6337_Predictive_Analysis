mean_zn_2500 = mean(zn_2500)
var_zn_2500 = var(zn_2500)
return(list(n=n, vn = vn_2500, mean_vn = vn_2500_bar, var_vn = vn_2500_var, zn = zn_2500, mean_zn = mean_zn_2500,yn = yn_2500, var_zn = var_zn_2500))
}
for(i in n){
assign(paste0("f",i),Q2(i))
}
for(i in n){
hist(Q2(i)$zn, breaks = 100,
main = paste("Histogram of zn_2500 for n = ", i, sep = ""),
xlab = "zn_t values",
xlim = c(-3,3))
}
for(i in n){
hist(Q2(i)$yn, breaks = 100,
main = paste("Histogram of zn_2500 for n = ", i, sep = ""),
xlab = "vn_t values",
xlim = c(-3,3))
}
n = c(2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 30, 50, 75, 100, 250, 500, 1000, 2000, 3000)
Q3 <- function(n) {
x = matrix(runif(n, 0, 12), nrow = i, ncol = 1)
u = matrix(runif(n, -4, 4), nrow = i, ncol = 1)
y = 3 + (2 * x) + u
cov_xy = cov(x, y)
var_x = var(x)
hat_beta = cov_xy/var_x
abs_beta = abs(hat_beta - 2)
return(list(n=n,x=x,u=u,y=y,cov_xy=cov_xy,var_x=var_x,hat_beta=hat_beta,abs_beta=abs_beta))
}
for(i in n){
assign(paste0("x",i),Q3(i))
}
n = c(2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 30, 50, 75, 100, 250, 500, 1000, 2000, 3000)
Q4 <- function(n){
b <- c()
for (j in c(1:2500)) {
# a
x = matrix(runif(n, 0, 12), nrow = n, ncol = 1)
# b
u = matrix(runif(n, -4, 4), nrow = n, ncol = 1)
# c
y = 3 + (2 * x) + u
# d
cov_xy = cov(x, y)
var_x = var(x)
beta_hat = cov_xy/var_x
b = append(b, beta_hat)
}
#  f
var_b = var(b)
c = sqrt(n)*(b - 2)
return(list(n=n,b=b,var_b=var_b,c=c))
}
for(i in n){
assign(paste0("q",i),Q4(i))
hist_data <- hist(Q4(i)$c, breaks = 100,
main = paste("Histogram of c for n = ", i, sep = ""),
xlab = "c_i values",
xlim = c(-3,3))
x_values <- seq(min(Q4(i)$c), max(Q4(i)$c), length = 100)
y_values <- dnorm(x_values, mean = mean(Q4(i)$c), sd = sd(Q4(i)$c))
y_values <- y_values * diff(hist_data$mids[1:2]) * length(Q4(i)$c)
lines(x_values, y_values, lwd = 2)
}
vdgm <- fread("videogamesales_main.csv",header = T)
if(demo) {str(vdgm)}
ptl_frq <- table(vdgm$Platform)
gnr_frq <- table(vdgm$Genre)
rating_frq <- table(vdgm$Rating)
vdgm_2013 <- vdgm[,Platform]
vdgm[,Genre]<-as.factor(vdgm[,Genre])
vdgm
vdgm_2013 <- vdgm[,Platform]
vdgm$Genre<-as.factor(vdgm$Genre)
vdgm$Platform<-as.factor(vdgm$Platform)
vdgm$Rating<-as.factor(vdgm$Rating)
lm1 <- lm(Global_Sales ~. - Name - Publisher - Developer,data = vdgm)
summary(lm1)
vdgm$ln_Global_Sales = log(vdgm$Global_Sales)
vdgm$ln_Critic_Score = log(vdgm$Critic_Score)
vdgm$ln_Critic_Count = log(vdgm$Critic_Count)
vdgm$ln_User_Score = log(vdgm$User_Score)
vdgm$ln_User_Count = log(vdgm$User_Count)
lm2 <- lm(ln_Global_Sales ~. - Name - ln_Critic_Score - ln_Critic_Count - ln_User_Score - ln_User_Count - Publisher - Developer - Global_Sales,data = vdgm)
summary(lm2)
lm3 <- lm(ln_Global_Sales ~. - Global_Sales - Name - Publisher - Developer - Critic_Score - Critic_Count -User_Score - ln_User_Count,data = vdgm)
summary(lm3)
anova(lm2,lm3)
lm3 <- lm(ln_Global_Sales ~. - Global_Sales - Name - Publisher - Developer - Critic_Score - Critic_Count -User_Score - ln_User_Count,data = vdgm)
summary(lm3)
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
str(raw)
# convert to data.table
raw     <- setDT(airquality)
seed    <- 504737137
(n      <- nrow(raw) )
str(raw)
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
base.resid
summary(base.resid)
summary(lm(fmla,data=raw))
demo <- T
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
tst <- sample(n,ceiling(frac*n))
cv.trn  <- lm(fmla,data=wk[-tst1,])$fitted.values
frac <- 0.1
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
cv.trn  <- lm(fmla,data=wk[-tst1,])$fitted.values
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
cv.trn  <- lm(fmla,data=raw[-tst,])$fitted.values
cv.trn
summary(cv.trn)
str(airquality)
raw     <- setDT(airquality[,-Day])
raw     <- setDT(airquality[-Day])
raw     <- setDT(airquality[,-c("Days")])
raw     <- setDT(airquality[,-c("Day")])
?setDT
raw[,Month = as.factor(Month)]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
cv.trn  <- lm(fmla,data=raw[-tst,])$fitted.values
summary(cv.trn)
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(wk[-tst,],wk[tst,],tst),by=.(grp)]
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- dt2$resid
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
r3      <- dt3$resid
kf.resid      <- dt3$resid
kf.resid
dt2
jk.resid      <- data.table(loc=idx,diff=dt2$resid)
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
jk.resid
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
raw     <- setDT(airquality[,-c("Day")])
raw     <- setDT(airquality)[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
IF(demo){summary(cv.trn)}
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,wk[tst,])
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- raw$Ozone[tst]-cv.trn
cv.resid <- raw$Ozone[tst]-cv.tst
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid      <- data.table(k=dt3$grp,loc=dt3$index,diff=dt3$resid)
if(demo){rm(list=ls())}
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
raw     <- setDT(airquality)[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- raw$Ozone[tst]-cv.tst
if(demo){summary(cv.resid)}
cv.resid
cv.tst
raw$Ozone[tst]
raw$Ozone
raw
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
raw     <- setDT(na.omit(airquality))[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- raw$Ozone[tst]-cv.tst
if(demo){summary(cv.resid)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid      <- data.table(k=dt3$grp,loc=dt3$index,diff=dt3$resid)
system.time(na.omit(airquality))
system.time(airquality[rowSums(is.na(airquality)) == 0, ])
system.time(df<-na.omit(airquality))
system.time(df<-airquality[rowSums(is.na(airquality)) == 0, ])
system.time(df<-airquality[complete.cases(airquality), ])
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
raw     <- setDT(na.omit(airquality))[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- raw$Ozone[tst]-cv.tst
if(demo){summary(cv.resid)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid      <- data.table(k=dt3$grp,loc=dt3$index,diff=dt3$resid)
cv.resid <- data.table(loc=1:ceiling(frac*n),diff=raw$Ozone[tst]-cv.tst)
cv.resid
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
# convert to data.table
raw     <- setDT(na.omit(airquality))[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- data.table(loc=1:ceiling(frac*n),diff=raw$Ozone[tst]-cv.tst)
if(demo){summary(cv.resid)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid      <- data.table(k=dt3$grp,loc=dt3$index,diff=dt3$resid)
cv.resid
jk.resid
kf.resid
kf.resid <- data.table(k=dt3$grp,loc=dt3$index,diff=dt3$resid)
kf.resid
kf.resid <- data.table(k=dt3$grp)
kf.resid
dt3
kf.resid <- data.table(k=dt3$k,loc=dt3$idx,diff=dt3$resid)
kf.resid
dt3
dt2
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
# convert to data.table
raw     <- setDT(na.omit(airquality))[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- data.table(loc=1:ceiling(frac*n),diff=raw$Ozone[tst]-cv.tst)
if(demo){summary(cv.resid)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid <- data.table(k=dt3$k,loc=dt3$idx,diff=dt3$resid)
if(demo){summary(cv.resid)}
if(demo){summary(jk.resid)}
if(demo){summary(kf.resid)}
setwd("c:/data/BUAN6357/HW_4"); source("prep.txt", echo=T)
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
require(tidyverse)
# convert to data.table
raw     <- setDT(na.omit(airquality))[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- data.table(loc=1:ceiling(frac*n),diff=raw$Ozone[tst]-cv.tst)
if(demo){summary(cv.resid)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
if(demo){summary(jk.resid)}
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid <- data.table(k=dt3$k,loc=dt3$idx,diff=dt3$resid)
if(demo){summary(kf.resid)}
q()
rm(list=ls())
demo <- T
require(MASS)
data("airquality")
require(data.table)
raw     <- setDT(na.omit(airquality))[,-c("Day")]
raw$Month <- as.factor(raw$Month)
seed    <- 504737137
(n      <- nrow(raw) )
fmla <- Ozone ~ .
base.resid <- lm(fmla,data=raw)$residuals
if(demo){summary(lm(fmla,data=raw))}
set.seed(seed)
frac <- 0.1
tst <- sample(n,ceiling(frac*n))
m1  <- lm(fmla,data=raw[-tst,])
if(demo){summary(m1)}
cv.trn <- m1$fitted.values
if(demo){summary(cv.trn)}
cv.tst <- predict(m1,raw[tst,])
if(demo){summary(cv.tst)}
cv.resid <- data.table(loc=tst,diff=raw$Ozone[tst]-cv.tst)
if(demo){summary(cv.resid)}
fitPred <- function(trn,tst,i) {
m <- lm(fmla,data=trn)
y <- tst$Ozone
p <- predict(m,tst)
r <- y - p
return(data.table(idx=i,resid=r,y=y,yhat=p))
}
c2      <- data.table(grp=1:n, tst=1:n)
dt2     <- c2[,fitPred(raw[-tst,],raw[tst,],tst),by=.(grp)]
jk.resid      <- data.table(loc=dt2$idx,diff=dt2$resid)
if(demo){summary(jk.resid)}
set.seed(seed)
kf  <- 10
t       <- rep(1:kf,ceiling(n/kf))[1:n]
c3      <- data.table(k=t ,idx=sample(n))
dt3     <- c3[,fitPred(raw[-idx,],raw[idx,],idx),by=.(k)]
kf.resid <- data.table(k=dt3$k,loc=dt3$idx,diff=dt3$resid)
if(demo){summary(kf.resid)}
install.packages("installr")
q()
library(tidyverse)
library(tidyverse)
install.packages("quantmod")
